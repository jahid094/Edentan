{{ 'custom-hero.css' | asset_url | stylesheet_tag }}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
{% comment %} <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js" defer></script>  {% endcomment %}
<script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<style>
  .custom_hero_product_image {
    max-width: {{ section.settings.image_width_1 }}rem;
    scale: 1.2;
  }

  @media only screen and (max-width:650px){
    .custom_hero_product_image {
      max-width: {{ section.settings.image_width_2 }}rem;
    }
  }

  .swiper-slide {
      flex-shrink: 0;
      width: 100%;
      height: 100%;
      position: relative;
      transition-property: transform;
      display: flex;
      justify-content: center;
  }

  .swiper-slider-title {
    position: absolute;
    top: 0;
    left: 50%;
    text-align: center;
    right: 0;
    z-index: 9;
    transform: translate(-50%, 50%);
    font-size: 1.8rem;
    font-weight: 600;
    color: #232323;
  }

  swiper-container {
    display: block;
    width: 100%;
    height: 100%;
  }

  swiper-slide {
    text-align: center;
    font-size: 18px;
    background: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .swiper-button-next:after, .swiper-rtl .swiper-button-prev:after {
    content: '' !important;
  }

  .swiper-button-prev:after, .swiper-rtl .swiper-button-next:after {
    content: '' !important;
  }

  swiper-slide img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .swiper-pagination-bullet-active {
    background: #232323;
  }

  .swiper-button-prev {
    background-image: url("data:image/svg+xml,%3Csvg%20class%3D%22w-6%20h-6%20text-gray-800%20dark%3Atext-white%22%20aria-hidden%3D%22true%22%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2224%22%20height%3D%2224%22%20fill%3D%22none%22%20viewBox%3D%220%200%2024%2024%22%3E%3Cpath%20stroke%3D%22currentColor%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20stroke-width%3D%222%22%20d%3D%22M5%2012h14M5%2012l4-4m-4%204%204%204%22/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    left: 15%;
  }
  
  .swiper-button-next {
    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg%20class%3D%22w-6%20h-6%20text-gray-800%20dark%3Atext-white%22%20aria-hidden%3D%22true%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2224%22%20height%3D%2224%22%20fill%3D%22none%22%20viewBox%3D%220%200%2024%2024%22%3E%3Cpath%20stroke%3D%22currentColor%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20stroke-width%3D%222%22%20d%3D%22M19%2012H5m14%200-4%204m4-4-4-4%22%2F%3E%3C%2Fsvg%3E") !important;
    background-repeat: no-repeat;
    right: 15%;
  }
</style>

<div class="overall-container">
  <div class="custom-hero-menu-container">
    <div class="logo-wrapper">
      <a href="/"
        ><img width="" height="" src="{{ shop.brand.logo | img_url: 'large' }}" class="custom-hero-menu-logo"
      ></a>
    </div>

    <div class="bottom-container">
      <div class="filters-header">FILTER</div>
      <div class="custom-hero-menu-links">
        <ul class="custom-hero-filter-ul">
          {%- for link in section.settings.filter.links -%}
            <li class="main-menu-list collections-{{ link.title | downcase }} pages-{{ link.title | downcase }}">
              <a class="custom-hero-menu-link" href="{{ link.url }}">{{ link.title }}</a>
              {% if link.links %}
                <ul class="custom-hero-submenu-ul">
                  {%- for child in link.links -%}
                    <li class="submenu-list collections-{{ child.title | downcase }}" >
                      <a class="custom-hero-submenu-link" href="{{ child.url }}">{{ child.title }}</a>
                    </li>
                  {% endfor %}
                </ul>
              {% endif %}
            </li>
          {% endfor %}
        </ul>
      </div>
      <div class="zoom-explore-header">EXPLORE</div>
      <div class="custom-zoom-wrapper">
        <div class="zoom-trackpad-container">
          <div class="zoom-trackpad-row">
            <div class="zoom-trackpad-cell empty"></div>
            <div class="zoom-trackpad-cell scroll-top-button">
              <svg
                class="w-6 h-6 text-gray-800 dark:text-white"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                fill="none"
                viewBox="0 0 24 24"
              >
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v13m0-13 4 4m-4-4-4 4"/>
              </svg>
            </div>
            <div class="zoom-trackpad-cell empty"></div>
          </div>
          <div class="zoom-trackpad-row">
            <div class="zoom-trackpad-cell scroll-left-button">
              <svg
                class="w-6 h-6 text-gray-800 dark:text-white"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                fill="none"
                viewBox="0 0 24 24"
              >
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12l4-4m-4 4 4 4"/>
              </svg>
            </div>
            <div class="zoom-trackpad-cell middle"></div>
            <div class="zoom-trackpad-cell scroll-right-button">
              <svg
                class="w-6 h-6 text-gray-800 dark:text-white"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                fill="none"
                viewBox="0 0 24 24"
              >
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 12H5m14 0-4 4m4-4-4-4"/>
              </svg>
            </div>
          </div>
          <div class="zoom-trackpad-row">
            <div class="zoom-trackpad-cell empty"></div>
            <div class="zoom-trackpad-cell scroll-bottom-button">
              <svg
                class="w-6 h-6 text-gray-800 dark:text-white"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                fill="none"
                viewBox="0 0 24 24"
              >
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19V5m0 14-4-4m4 4 4-4"/>
              </svg>
            </div>
            <div class="zoom-trackpad-cell empty"></div>
          </div>
        </div>

        <div class="custom-hero-container-zoom">
          <div class="custom-zoom-buttons-wrapper">
            <div class="custom-hero-container-zoom-in">
              <svg
                class="w-6 h-6 text-gray-800 dark:text-white"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                fill="none"
                viewBox="0 0 24 24"
              >
                <path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="m21 21-3.5-3.5M10 7v6m-3-3h6m4 0a7 7 0 1 1-14 0 7 7 0 0 1 14 0Z"/>
              </svg>
            </div>
            <div class="custom-hero-container-zoom-out">
              <svg
                class="w-6 h-6 text-gray-800 dark:text-white"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                fill="none"
                viewBox="0 0 24 24"
              >
                <path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="m21 21-3.5-3.5M7 10h6m4 0a7 7 0 1 1-14 0 7 7 0 0 1 14 0Z"/>
              </svg>
            </div>    
          </div>
        </div>
      </div>
    </div>
  </div>
  {% comment %}
    <div class="custom-header-container">
      <ul class="custom-hero-header-ul">
        {%- for link in section.settings.menu.links -%}
          <li>
            <a class="custom-hero-menu-link" href="{{ link.url }}">{{ link.title }}</a>
          </li>
        {% endfor %}
      </ul>
    </div>
  {% endcomment %}
  <div class="custom-footer-container">
    <div class="custom-footer-breadcrumb"></div>
    <div class="custom-footer-social">
      <a href="{{ settings.social_youtube_link }}">
        <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="25" height="100" viewBox="0 0 50 50">
        <path d="M 24.402344 9 C 17.800781 9 11.601563 9.5 8.300781 10.199219 C 6.101563 10.699219 4.199219 12.199219 3.800781 14.5 C 3.402344 16.898438 3 20.5 3 25 C 3 29.5 3.398438 33 3.898438 35.5 C 4.300781 37.699219 6.199219 39.300781 8.398438 39.800781 C 11.902344 40.5 17.898438 41 24.5 41 C 31.101563 41 37.097656 40.5 40.597656 39.800781 C 42.800781 39.300781 44.699219 37.800781 45.097656 35.5 C 45.5 33 46 29.402344 46.097656 24.902344 C 46.097656 20.402344 45.597656 16.800781 45.097656 14.300781 C 44.699219 12.101563 42.800781 10.5 40.597656 10 C 37.097656 9.5 31 9 24.402344 9 Z M 24.402344 11 C 31.601563 11 37.398438 11.597656 40.199219 12.097656 C 41.699219 12.5 42.898438 13.5 43.097656 14.800781 C 43.699219 18 44.097656 21.402344 44.097656 24.902344 C 44 29.199219 43.5 32.699219 43.097656 35.199219 C 42.800781 37.097656 40.800781 37.699219 40.199219 37.902344 C 36.597656 38.601563 30.597656 39.097656 24.597656 39.097656 C 18.597656 39.097656 12.5 38.699219 9 37.902344 C 7.5 37.5 6.300781 36.5 6.101563 35.199219 C 5.300781 32.398438 5 28.699219 5 25 C 5 20.398438 5.402344 17 5.800781 14.902344 C 6.101563 13 8.199219 12.398438 8.699219 12.199219 C 12 11.5 18.101563 11 24.402344 11 Z M 19 17 L 19 33 L 33 25 Z M 21 20.402344 L 29 25 L 21 29.597656 Z"></path>
        </svg>
      </a>
      <a href="{{ settings.social_instagram_link }}">
        <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="25" height="100" viewBox="0 0 50 50">
          <path d="M 16 3 C 8.8324839 3 3 8.8324839 3 16 L 3 34 C 3 41.167516 8.8324839 47 16 47 L 34 47 C 41.167516 47 47 41.167516 47 34 L 47 16 C 47 8.8324839 41.167516 3 34 3 L 16 3 z M 16 5 L 34 5 C 40.086484 5 45 9.9135161 45 16 L 45 34 C 45 40.086484 40.086484 45 34 45 L 16 45 C 9.9135161 45 5 40.086484 5 34 L 5 16 C 5 9.9135161 9.9135161 5 16 5 z M 37 11 A 2 2 0 0 0 35 13 A 2 2 0 0 0 37 15 A 2 2 0 0 0 39 13 A 2 2 0 0 0 37 11 z M 25 14 C 18.936712 14 14 18.936712 14 25 C 14 31.063288 18.936712 36 25 36 C 31.063288 36 36 31.063288 36 25 C 36 18.936712 31.063288 14 25 14 z M 25 16 C 29.982407 16 34 20.017593 34 25 C 34 29.982407 29.982407 34 25 34 C 20.017593 34 16 29.982407 16 25 C 16 20.017593 20.017593 16 25 16 z"></path>
        </svg>
      </a>
    </div>
  </div>

  <div class="custom-hero-container custom-hero-container-metaobject">
    <div class="custom-hero-container-images">
      {% render 'custom-hero-grid-container', shop: shop, request: request,  %}
    </div>
    <div class="custom-hero-container-gallery-details hidden">
      <div class="swiper mySwiper">
        <div class="swiper-wrapper">
          {% comment %} <div class="swiper-slide">Slide 1</div>
          <div class="swiper-slide">Slide 2</div>
          <div class="swiper-slide">Slide 3</div>
          <div class="swiper-slide">Slide 4</div>
          <div class="swiper-slide">Slide 5</div>
          <div class="swiper-slide">Slide 6</div>
          <div class="swiper-slide">Slide 7</div>
          <div class="swiper-slide">Slide 8</div>
          <div class="swiper-slide">Slide 9</div> {% endcomment %}
        </div>
        <div class="swiper-button-next"></div>
        <div class="swiper-button-prev"></div>
        <div class="swiper-pagination"></div>
        <div class="swiper-slider-title"></div>
      </div>
  </div>
</div>

<script>
    window.onload = () => {
        let frame = document.querySelector(".custom-hero-container-metaobject")
        let container = document.querySelector(".custom-hero-container-images-metaobject-products")
        let frameWidth = frame.clientWidth
        let containerWidth = container.clientWidth
        let frameHeight = frame.clientHeight
        let containerHeight = container.clientHeight
        frame.scrollLeft = (containerWidth - frameWidth) / 2;
        frame.scrollTop = (containerHeight - frameHeight) / 2;
    };

    let zoomInButton = document.querySelector(".custom-hero-container-zoom-in");
    zoomInButton.addEventListener("click", (e) => {
        let currentSize = Number(document.querySelector(".custom_hero_product_image").getAttribute("data-image-size"));
        // console.log(currentSize, "currentSize");
        let mql = window.matchMedia("(max-width: 650px)");
        // console.log(mql, "mql");

        if (!document.querySelector(".custom_hero_product_image").getAttribute("data-image-size")) {
            if (mql.matches) {
                currentSize = {{ section.settings.image_width_2 }}
            }
            else if (!mql.matches) {
                currentSize = {{ section.settings.image_width_1 }}
            }
        }
      
        // you can change maximum size here
        if (currentSize < 90) {
            currentSize += 2; // you can change the zoom in with every zoom here
        }
        console.log(currentSize, "currentSize zoomIn");
        document.querySelectorAll(".custom_hero_product_image").forEach((img) => {
            img.setAttribute("style", `max-width:${currentSize}rem;`);
            img.setAttribute("data-image-size", `${currentSize}`)

            if(currentSize < 23) {
              img.style.scale = "1.2";
              img.parentElement.style.overflow = "hidden";
            }else {
              img.style.scale = "1.0";
              img.parentElement.style.overflow = "unset";
            }
        })
    });

    let zoomOutButton = document.querySelector(".custom-hero-container-zoom-out");
    zoomOutButton.addEventListener("click", (e) => {
        let currentSize = Number(document.querySelector(".custom_hero_product_image").getAttribute("data-image-size"));
        console.log(currentSize, "currentSize click begin");
        let mql = window.matchMedia("(max-width: 650px)");
        if (!document.querySelector(".custom_hero_product_image").getAttribute("data-image-size")) {
            if (mql.matches) {
                currentSize = {{ section.settings.image_width_2 }}
            }
            else if (!mql.matches) {
                currentSize = {{ section.settings.image_width_1 }}
            }
        }
      // Get the element by its ID or any other selector
      var element = document.querySelector(".custom-hero-container-images-metaobject-products");
    
      // Get the height of the element
      var elementHeight = element.clientHeight;
    
      // Calculate the height in viewport height (vh) units
      var vhHeight = (elementHeight / window.innerHeight) * 100;
      // console.log(vhHeight, "vhHeight")
      // you can change minimum size here
        if (currentSize > 11) {
            currentSize -= 2; // you can change the zoom out with every zoom here
        }

        console.log(currentSize, "currentSize zoom out");
        document.querySelectorAll(".custom_hero_product_image").forEach((img) => {
          // console.log(img, "img");
            img.setAttribute("style", `max-width:${currentSize}rem;`)
            img.setAttribute("data-image-size", `${currentSize}`)

            if(currentSize < 23) {
              img.style.scale = "1.2";
              img.parentElement.style.overflow = "hidden";
            }else {
              img.style.scale = "1.0";
              img.parentElement.style.overflow = "unset";
            }
        })
    });

    // Scroll buttons
    let scrollLeftButton = document.querySelector(".scroll-left-button");
    let scrollRightButton = document.querySelector(".scroll-right-button");
    let scrollTopButton = document.querySelector(".scroll-top-button");
    let scrollBottomButton = document.querySelector(".scroll-bottom-button");

    scrollLeftButton.addEventListener("click", () => {
        let frame = document.querySelector(".custom-hero-container-metaobject");
        frame.scrollLeft -= 100; // You can adjust the scroll distance here
    });

    scrollRightButton.addEventListener("click", () => {
        let frame = document.querySelector(".custom-hero-container-metaobject");
        frame.scrollLeft += 100; // You can adjust the scroll distance here
    });

    scrollTopButton.addEventListener("click", () => {
        let frame = document.querySelector(".custom-hero-container-metaobject");
        frame.scrollTop -= 100; // You can adjust the scroll distance here
    });

    scrollBottomButton.addEventListener("click", () => {
        let frame = document.querySelector(".custom-hero-container-metaobject");
        frame.scrollTop += 100; // You can adjust the scroll distance here
    });
</script>

<!-- Initialize Swiper -->
<script>
  var swiper = new Swiper(".mySwiper", {
    spaceBetween: 30,
    pagination: {
      el: ".swiper-pagination",
      clickable: true,
    },
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const allLinksWithCustomGalleryClass = document.querySelectorAll('.custom_hero_gallery');
    const breadcrumbPath = document.querySelector('.custom-footer-breadcrumb');
    const urlPathname = window.location.pathname === "/" ? '/index' : window.location.pathname;
    const transformedPathname = urlPathname.substring(1).replace('/', '-');

    const activeSubmenu = document.querySelector(`.submenu-list.${transformedPathname}`);
    const activeMainMenu = document.querySelector(`.main-menu-list.${transformedPathname}`);
    if(activeSubmenu){
      activeSubmenu.classList.add('active');
    }
    if(activeMainMenu){
      activeMainMenu.classList.add('active');
    }

    allLinksWithCustomGalleryClass.forEach((link) => {
      link.addEventListener('mouseover', () => {
        let gridTitle = link.getAttribute("grid-title");
        let gridPage = link.getAttribute("grid-page");
        
        breadcrumbPath.innerHTML = `${gridPage} / <span>${gridTitle}</span>`;

            {% comment %} if (urlPathname.includes('collections/acceessories')) {
              const breadcrumb = `SHOP / ACCESSORIES / <strong> ${gridTitle.toUpperCase()} </strong>`;
              breadcrumbPath.innerHTML = breadcrumb;
            }else if (urlPathname.includes('collections/bags')) {
              const breadcrumb = `SHOP / BAGS / <strong> ${gridTitle.toUpperCase()} </strong>`;
              breadcrumbPath.innerHTML = breadcrumb;
            }else if (urlPathname.includes('collections/clothes')) {
              const breadcrumb = `SHOP / CLOTHES / <strong> ${gridTitle.toUpperCase()} </strong>`;
              breadcrumbPath.innerHTML = breadcrumb;
            }else if (urlPathname.includes('collections/sale')) {
              const breadcrumb = `SHOP / SALE / <strong> ${gridTitle.toUpperCase()} </strong>`;
              breadcrumbPath.innerHTML = breadcrumb;
            }else if (urlPathname.includes('collections/aw23')) {
              const breadcrumb = `COLLECTIONS / AW23 / <strong> ${gridTitle.toUpperCase()} </strong>`;
              breadcrumbPath.innerHTML = breadcrumb;
            }else if (urlPathname.includes('collections/aw24')) {
              const breadcrumb = `COLLECTIONS / AW24 / <strong> ${gridTitle.toUpperCase()} </strong>`;
              breadcrumbPath.innerHTML = breadcrumb;
            }else if (urlPathname.includes('collections/fw15')) {
              const breadcrumb = `COLLECTIONS / AW15 / <strong> ${gridTitle.toUpperCase()} </strong>`;
              breadcrumbPath.innerHTML = breadcrumb;
            }else if (urlPathname.includes('collections/all')) {
              const breadcrumb = `ALL / <strong> ${gridTitle.toUpperCase()} </strong>`;
              breadcrumbPath.innerHTML = breadcrumb;
            }else if (urlPathname.includes('pages/features')) {
              const breadcrumb = `FEATURES / <strong> ${gridTitle.toUpperCase()} </strong>`;
              breadcrumbPath.innerHTML = breadcrumb;
            }else if (urlPathname.includes('pages/collections')) {
              const breadcrumb = `COLLECTIONS / <strong> ${gridTitle.toUpperCase()} </strong>`;
              breadcrumbPath.innerHTML = breadcrumb;
            }else {
              const breadcrumb = `/ <strong> ${gridTitle.toUpperCase()} </strong>`;
              breadcrumbPath.innerHTML = breadcrumb;
            } {% endcomment %}
        });

        link.addEventListener('mouseout', () => {
          breadcrumbPath.innerHTML = ``;
        });
    });

    const linksWithoutHrefAndWithCustomGalleryClass = document.querySelectorAll('a:not([href]).custom_hero_gallery');
    const heroContatinerImagesWrapper = document.querySelector('.custom-hero-container-images');
    const heroContatinerGalleryWrapper = document.querySelector('.custom-hero-container-gallery-details');

    linksWithoutHrefAndWithCustomGalleryClass.forEach((link) => {
      // Add a click event listener to each link
      link.addEventListener('click', function () {
        console.log(link.dataset, 'data set');
        {% comment %} heroContatinerImagesWrapper.style.display = 'none'; {% endcomment %}
        {% comment %} heroContatinerGalleryWrapper.style.display = 'flex'; {% endcomment %}
        let footerBreadcrum = document.querySelector('.custom-footer-breadcrumb');
        let sliderWrapper = document.querySelector('.swiper-wrapper');
        sliderWrapper.innerHTML = "";

        let sliderTitle = document.querySelector('.swiper-slider-title');
        let gridTitle = link.getAttribute("grid-title");
        let gridPage = link.getAttribute("grid-page");
        sliderTitle.innerHTML = gridTitle;

        console.log(footerBreadcrum, "footerBreadcrum")
        

        for (const key in link.dataset) {
          if (link.dataset.hasOwnProperty(key)) {
            // Create a new div for the swiper-slide
            let swiperSlide = document.createElement('div');
            swiperSlide.classList.add('swiper-slide');

            // Create the img element and set its src attribute
            let img = document.createElement('img');
            img.src = link.dataset[key];

            // Append the image to the swiper-slide div
            swiperSlide.appendChild(img);

            // Append the swiper-slide to the swiper-wrapper
            sliderWrapper.appendChild(swiperSlide);
          }
        }

        if (!heroContatinerImagesWrapper.classList.contains('hidden')) {
            heroContatinerImagesWrapper.classList.add('hidden');
            {% comment %} setTimeout(() => { {% endcomment %}
                heroContatinerGalleryWrapper.classList.remove('hidden');
            {% comment %} }, 500); // Delay to sync with CSS transition duration {% endcomment %}
        } else {
            heroContatinerGalleryWrapper.classList.add('hidden');
            {% comment %} setTimeout(() => { {% endcomment %}
                heroContatinerImagesWrapper.classList.remove('hidden');
            {% comment %} }, 500); {% endcomment %}
        }


        setTimeout(()=> {
          footerBreadcrum.innerHTML = `${gridPage} / <span>${gridTitle}</span>`;
        }, 200)

      });
    });

  });
</script>

<script>
  // Parse the metaobject entries as JSON
  var entries = {{ shop.metaobjects.hero.values | json }};

  // Sort the entries by date
  entries.sort(function(a, b) {
    return new Date(b.date) - new Date(a.date);
  });

  console.log(entries)
</script>

{% schema %}
{
  "name": "Custom Hero for Home",
  "settings": [
    {
      "type": "link_list",
      "id": "filter",
      "default": "main-menu",
      "label": "Select Filter:"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "Select Menu:"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background Color of Section:",
      "default": "#fcfcfc"
    },
    {
      "type": "range",
      "id": "image_width_1",
      "min": 10,
      "max": 50,
      "step": 0.5,
      "unit": "rem",
      "label": "Width of image (Desktop)",
      "default": 10
    },
    {
      "type": "range",
      "id": "image_width_2",
      "min": 10,
      "max": 50,
      "step": 0.5,
      "unit": "rem",
      "label": "Width of image (Mobile)",
      "default": 10
    }
  ],
  "presets": [
    {
      "name": "Custom Hero for Home",
      "category": "Custom"
    }
  ]
}
{% endschema %}
